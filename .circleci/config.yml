version: 2.1

orbs: 
  node: circleci/node@5.0.2
  android: circleci/android@2.0.3
jobs:
  build-and-test:
    parameters:
      node-version: 
        type: string
      system-image: 
          type: string
    machine:
      image: android:2022.04.1
    steps:
      - checkout
      - node/install:
          install-yarn: true
          node-version: << parameters.node-version >>
      - restore_cache:
          key: node-cache-{{ .BuildNum }}
      - run: npm install --force
      - save_cache:
          key: node-cache-{{ .BuildNum }}
          paths: 
            - node_modules
      - run:
          name: Create keystore.properties
          command: cd android && printf 'releaseKeyAlias=%s\nreleaseKeyPassword=%s\nreleaseKeyStore=%s\nreleaseStorePassword=%s' \
            $RELEASE_KEY_ALIAS $RELEASE_KEY_PASSWORD $RELEASE_KEYSTORE $RELEASE_STORE_PASSWORD > keystore.properties
      - android/create-avd: 
          system-image: <<parameters.system-image>>
          install: true
          avd-name: "avd1"
      - android/start-emulator-and-run-tests:
          test-command: yarn test
          post-emulator-launch-assemble-command: cd android && gradle aDAT
      - store_test_results:
          path: reports
  deploy-internal:
    docker:
      - image: cimg/android:2022.06
    steps:
      - checkout
      - node/install:
          install-yarn: false
          node-version: "16.13.0"
      - run: npm install
      - run:
          name: Decode Android key store
          command: echo $BASE64_KEYSTORE | base64 -d | tee keystore android/app/keystore > /dev/null
      - run:
          name: Create keystore.properties
          command: cd android && printf 'releaseKeyAlias=%s\nreleaseKeyPassword=%s\nreleaseKeyStore=%s\nreleaseStorePassword=%s' \
            $RELEASE_KEY_ALIAS $RELEASE_KEY_PASSWORD $RELEASE_KEYSTORE $RELEASE_STORE_PASSWORD > keystore.properties
      - run:
          name: Create Google Play key
          command: echo $GOOGLE_PLAY_KEY > google-play-key.json
      - run: sudo gem install fastlane
      - run: cd android &&  bundle install && bundle exec fastlane internal
  deploy-alpha:
    docker:
      - image: cimg/android:2022.06
    steps:
      - checkout
      - node/install:
          install-yarn: false
          node-version: "16.13.0"
      - run: npm install
      - run:
          name: Decode Android key store
          command: echo $BASE64_KEYSTORE | base64 -d | tee keystore android/app/keystore > /dev/null
      - run:
          name: Create keystore.properties
          command: cd android && printf 'releaseKeyAlias=%s\nreleaseKeyPassword=%s\nreleaseKeyStore=%s\nreleaseStorePassword=%s' \
            $RELEASE_KEY_ALIAS $RELEASE_KEY_PASSWORD $RELEASE_KEYSTORE $RELEASE_STORE_PASSWORD > keystore.properties
      - run:
          name: Create Google Play key
          command: echo $GOOGLE_PLAY_KEY > google-play-key.json
      - run: sudo gem install fastlane
      - run: cd android &&  bundle install && bundle exec fastlane alpha
  deploy-beta:
    docker:
      - image: cimg/android:2022.06
    steps:
      - checkout
      - node/install:
          install-yarn: false
          node-version: "16.13.0"
      - run: npm install
      - run:
          name: Decode Android key store
          command: echo $BASE64_KEYSTORE | base64 -d | tee keystore android/app/keystore > /dev/null
      - run:
          name: Create keystore.properties
          command: cd android && printf 'releaseKeyAlias=%s\nreleaseKeyPassword=%s\nreleaseKeyStore=%s\nreleaseStorePassword=%s' \
            $RELEASE_KEY_ALIAS $RELEASE_KEY_PASSWORD $RELEASE_KEYSTORE $RELEASE_STORE_PASSWORD > keystore.properties
      - run:
          name: Create Google Play key
          command: echo $GOOGLE_PLAY_KEY > google-play-key.json
      - run: sudo gem install fastlane
      - run: cd android &&  bundle install && bundle exec fastlane beta

workflows:
  build-and-test-workflow:
    jobs:
      - build-and-test:
         matrix:
            parameters:
               node-version: ["16.13.0"]
               system-image: ["system-images;android-31;google_apis;x86_64", "system-images;android-31;default;x86_64", "system-images;android-29;default;x86_64", "system-images;android-28;default;x86_64", "system-images;android-29;default;x86", "system-images;android-28;default;x86"]
      - deploy-alpha:
          filters:
            branches:
              only: alpha-release
          requires:
            - build-and-test
      - deploy-beta:
          filters: 
            branches:
              only: beta-release
          requires:
            - build-and-test
      - deploy-internal:
          # filters:
          #   branches:
          #     only: internal-release
          requires:
            - build-and-test
            


